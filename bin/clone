#!/usr/bin/env bash

if [ -z "$_ASGSH_PID" ]; then
  echo "This script is meant to run inside of the ASGS Shell Environment, asgsh."
  exit 1;
fi

_clone() {
  case "${1}" in
    profile)
      if [[ -z "$ASGS_CONFIG" || ! -e "$ASGS_CONFIG" ]]; then
        echo "'clone profile' only proceeds if the parent profile's config file has been defined."
        echo "type, 'save profile <new-profile-name>' if you don't wish to define a config file first."
        return
      fi
      _epoch=$(date +%s)
      _default_new_profile=${_ASGSH_CURRENT_PROFILE}-${_epoch}-clone
      read -p "Name of new profile? [$_default_new_profile] " new_profile_name
      if [ -z "$new_profile_name" ]; then
        new_profile_name=$_default_new_profile
      fi
      _year=$(date +%Y)
      _default_new_config="$SCRIPTDIR/config/$_year/${new_profile_name}.sh"
      read -p "Name of new config file? [$_default_new_config] " new_config
      if [ -z "$new_config" ]; then
        new_config=$_default_new_config
      fi
      read -p "Create new profile? [y] " create
      if [[ -z "$create" || "$create" = "y"  ]]; then
        cp -v $ASGS_CONFIG $new_config
        define config $new_config
        save profile $new_profile_name
        rl
        read -p "Would you like to edit the new configuration file? [y] " _edit
        if [[ -z "$_edit" || "$_edit" = "y" ]]; then
          edit config
        fi
      else
        echo "Profile cloning operation has been aborted."
      fi
      ;;
    *) echo "'clone' only applies to 'profile'"
      ;;
  esac
}

_clone $@
