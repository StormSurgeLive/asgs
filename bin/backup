#!/usr/bin/env bash

PWD=$(pwd)
PWD=${PWD##*/}
BKPTGZ=${1:-$HOME/ASGS-SAVE-${PWD}.tgz}
BKPMD5=${2:-./ASGS-SAVE-MANIFEST.MD5}
BKPMETA=./ASGS-SAVE-META.txt
BKPMAN=ASGS-MANIFEST

# require .tgz extension (not automatically added)
EXT="${BKPTGZ##*.}"
if [[ "$EXT" != "tgz" ]]; then
  echo "FATAL: destination TGZ file name requires the extension '.tgz'. Exiting ..." 
  exit 1
fi

# check if destination TGZ is on a remote host via ssh
USE_SSH=no
HOST=
FILE=
if [[ $BKPTGZ =~ ":" ]]; then
  USE_SSH=yes
  HOST=$(echo "$BKPTGZ"|awk -F: '{print $1}')
  FILE=$(echo "$BKPTGZ"|awk -F: '{print $2}')
else
  # make absolute paths when local
  _BKPTGZ=$(readlink -f $BKPTGZ)
  # disallow files in pwd
  if [[ $(dirname "$_BKPTGZ") == $(pwd) ]]; then
    echo "FATAL: destination TGZ can't be put into the current directory being backed up. Exiting ..." 
    exit 1
  fi
  unset _BKPTGZ
fi

# check if file exists (local check and remote check if USE_SSH=="yes")
if [[ "$USE_SSH" == "no" && -e "$BKPTGZ" ]]; then
  echo "FATAL: "$BKPTGZ", already exists local, delete and run 'backup' again. Exiting ..." 
  exit 1
fi
if [[ "$USE_SSH" == "yes" ]]; then
  ssh $HOST bash <<SSHCMD
    if [[ -f $FILE ]]; then
      exit 1 # exists (error)
    else
      exit 0 # doesn't exist (ok)
    fi
SSHCMD
  ERRCODE=$?
  if [[ $ERRCODE != 0 ]]; then
    echo "FATAL: "$FILE", already exists on '$HOST', delete and run 'backup' again. Exiting ..." 
    exit 1
  fi
fi

# tar/gzip
if [ -e "$BKPMD5" ]; then
  echo Directory appears to have been restored previously, remove $BKPMD5 and try again ...
  exit 1
fi

# clear out ./tmp 
rm -rf ./tmp/*

# create manifest
git clean -n -x -d | awk '{print $3}' | grep -v repository > $BKPMAN 

# add directories that are also git repos
echo "opt/models/adcircs" >> ./$BKPMAN
echo "git/"               >> ./$BKPMAN

# tar/gzip + generation of the contents, each file is checksum'd with MD5
cat ./$BKPMAN | grep -v '\/$' | xargs md5sum | tee $BKPMD5

# create metafile
echo "#autogenerated, not for human consumption"  > $BKPMETA
date "+%s %z"                                    >> $BKPMETA # date as unix epoch (local time)
git log | head -n 1 | awk '{print $2}'           >> $BKPMETA # ASGS SHA
pwd                                              >> $BKPMETA # ASGS absolute path location
bin/guess platform                               >> $BKPMETA # machine name (bin/guess platform)
md5sum $BKPMD5 | awk '{print $1}'                >> $BKPMETA # md5 of the digest file, $BKPMD5

echo $BKPMD5              >> ./$BKPMAN
echo $BKPMETA             >> ./$BKPMAN

if [ "$USE_SSH" == "yes" ]; then
  tar zcvf - -T ./$BKPMAN | ssh $HOST "cat > $FILE"
else
  tar zcvf $BKPTGZ -T ./$BKPMAN
fi

rm -v $BKPMD5 $BKPMETA ./$BKPMAN
