#!/bin/ksh

# Specify the queue explicitly
#PBS -q %queuename%

# Specify email address
#PBS -M %notifyuser%

# Specify number of cpus in a machine-specific way
#PBS -l select=%select%:ncpus=32:mpiprocs=32

# Specify the wall clock time
#PBS -l walltime=%walltime%

# Merge stderr to stdout (optional, otherwise they're in separate files)
#PBS -j oe

# Name the job (this will appear in the output from the qstat command)
#PBS -N %pbsname%

# Specify the output filename explicitly (optional; the default is named
# from the job ID, in the directory where qsub was run.)
#PBS -o %advisdir%/%enstorm%/%jobtype%.%enstorm%.out

# Specify the account that the time should be taken from 
#PBS -A %account%

# Request mail when job ends, or is aborted (optional, default is "a" only)
# (commented out)
##PBS -m ea

# The directory to start in 
cd %advisdir%/%enstorm%

# These are the actual commands to be executed.
# . /opt/modules/default/etc/modules.sh
module load cray-netcdf
DATETIME=`date +'%Y-%h-%d-T%H:%M:%S'`
echo "[${DATETIME}] : padcirc starting in %advisdir%/%enstorm%." >> %jobtype%.%enstorm%.run.start
echo "Test job starting at $DATETIME."
%submitstring% -n %ncpu% %adcircdir%/%jobtype% %cloption% > %jobtype%.%enstorm%.stdout.stderr 2>&1
ERROVALUE=$?
DATETIME=`date +'%Y-%h-%d-T%H:%M:%S'`
if [ $ERROVALUE == 0 ] ; then
   RUNSUFFIX="finish"
else 
   RUNSUFFIX="error"
fi
echo "[${DATETIME}] : %jobtype%.%enstorm% finished in %advisdir%/%enstorm% with return value = $ERROVALUE" > %jobtype%.%enstorm%.run.${RUNSUFFIX}
echo "Job finished at $DATETIME."
# You don't need anything special at the end of the script.
