#!/bin/bash
#
# generate meterological data in vtk and (for use with
# paraview) and fort.14/fort.74 formats (for use with
# maureparticle)
#
# frame_driver.sh 20 fort.22.orig.irene.Hindcast 3600.0 Hindcast 1 0

NWS=$1       # 15 or 19
INPUT=$2     # name of input file
TIMESTEP=$3  # "default" to look at each forecast increment ; (sec) otherwise
ADVISORY=$4  # set to 025, 030, 035, Hindcast, etc
FRAME=$5     # 0 for whole fort.22; otherwise set to frame of interest
MYPROC=$6    # processor number in parallel (0 in serial)
ADCIRCDIR=$7 # directory where adcirc executables are located
ASGSDIR=$8
PERL5LIB=$9
MESHFILE=${10}  # "auto" if mesh should be autogenerated
DESCRIPT="${11}"
PLOTMAX=${12}
RMAX=${13}
VMAX=${14}
TIMEOFFSET=${15}
TIMEZONE=${16}
#
export PERL5LIB
ASWIPTIMESTEP=""
VORTVIZTIMESTEP=""
ASWIPFRAMEOPT=""
VORTVIZFRAMEOPT=""
MESHFILEOPT=""
PLOTOPT=""
#
if [ $TIMESTEP != "default" ]; then
   ASWIPTIMESTEP="-o $TIMESTEP"
   VORTVIZTIMESTEP="--outputincrement $TIMESTEP"
fi
if [ $FRAME != "0" ]; then
   ASWIPFRAMEOPT="-f $FRAME"
   VORTVIZFRAMEOPT="--frame $FRAME"
fi
if [ $MESHFILE = auto ]; then
   MESHFILEOPT="-e ${ASGSDIR}/output/spatial_5a_1r.ele"
else
   MESHFILEOPT="-i $MESHFILE"
fi
if [ $PLOTMAX != auto ]; then
   PLOTOPT="--plotmax $PLOTMAX"
fi
# aswip options
# -m ! method of selecting quadrant Rmax values (only for NWS=19) ;
#    !  method 1: use the 34kt isotach only (like original NWS=9)
#    !  method 2: use the fancy way of taking the highest
#    !            isotach Rmax that exists
#    !  method 3: use preferably the 50kt isotach Rmax in each quadrant,
#    !            if not available, use the 34kt one
#    !  method 4: use all available isothch for each cycle,
#    !            linearly weighted-combination will be performed in
#    !            **NWS20GET** module
#
# -w ! the name of the track file to read ("fort.22" is default)
#
# -a ! turns on writing of full circle Rmax files (360 deg in 1 deg incr)
#    ! to a file called full_circle_rmaxes_%04d.d
#
# -o ! time increment for writing output (seconds)
#
# -f ! "frame" or output increment to analyze
#
# -p ! Rmax percent change
#
# -x ! Vmax percent change
#
# -t ! time offset (like a hotstart time)
#
# -e ! element table (in this case, the node locations will be autogenerated)
#
# -i ! name of the mesh file
#
# write full circle Rmaxes data
echo "INFO: frame_driver.sh: Running aswip with the following command line options:"
echo "$ADCIRCDIR/aswip -n $NWS -m 2 -w $INPUT -a $ASWIPTIMESTEP $ASWIPFRAMEOPT -p $RMAX -x $VMAX -t $TIMEOFFSET"
$ADCIRCDIR/aswip -n $NWS -m 2 -w $INPUT -a $ASWIPTIMESTEP $ASWIPFRAMEOPT -p $RMAX -x $VMAX -t $TIMEOFFSET
# write radial v and p
echo "INFO: frame_driver.sh: Running aswip with the following command line options:"
echo "$ADCIRCDIR/aswip -n $NWS -m 2 -w $INPUT -v $ASWIPTIMESTEP $ASWIPFRAMEOPT -p $RMAX -x $VMAX -t $TIMEOFFSET"
$ADCIRCDIR/aswip -n $NWS -m 2 -w $INPUT -v $ASWIPTIMESTEP $ASWIPFRAMEOPT -p $RMAX -x $VMAX -t $TIMEOFFSET
# generate shell script(s) that will create maps in gmt
perl ${ASGSDIR}/output/vortex_viz_gen.pl --advisorynum $ADVISORY --timezone $TIMEZONE $VORTVIZTIMESTEP $VORTVIZFRAMEOPT $PLOTOPT
# execute shell script to create figures with gmt
chmod +x plot_radii.sh
./plot_radii.sh
# execute gnuplot script to create line graphs with gmt
gnuplot radial_v_and_p.gp
#
# create 3D viz of surface wind speeds
echo "generating spatial wind field with $ADCIRCDIR/aswip -n $NWS -m 2 -w $INPUT -s $ASWIPTIMESTEP $ASWIPFRAMEOPT $MESHFILEOPT"
$ADCIRCDIR/aswip -n $NWS -m 2 -w $INPUT -s -p $RMAX -x $VMAX $ASWIPTIMESTEP $ASWIPFRAMEOPT $MESHFILEOPT -t $TIMEOFFSET # write spatial v and p
files=""
if [ $FRAME = "0" ]; then
   files=`ls spatial_data_???.d`
else
   files=`printf "spatial_data_%03d.d" $FRAME`
fi
for file in $files; do
   num=`expr substr $file 14 3`
   if [ $MESHFILE = auto ]; then
      vtkpython ${ASGSDIR}/output/tristreamline.py -f $num -a "$DESCRIPT"
   else
      vtkpython ${ASGSDIR}/output/unstreamline.py $num
   fi
done
#
# make a montage of the radii, v(r) plot, p(r) plot, and 3D viz
files=""
if [ $FRAME = "0" ]; then
   files=`ls radii_???.ps`
else
   files=`printf "radii_%03d.ps" $FRAME`
fi
